config:
    datapath: 'sample_data'
    savefigpath: 'tex/figs_QAA2017-22_S27B'
    savedatapath: 'sample_data/data'
    latexpath: 'tex'

sample:
    name: 'QAA2017-22 S27B'
    nickname: 'sample 1'
    depth: '12.57-12.63 m'
    h0: 20.386      # [mm]

lvdt:
    filename: 'sample_data/Campbell/CR6Series_SN4750_LVDT_table.dat'
    h0: 45.53783    # [mm]    
    channel: 4
    calibration:
        type: 'invlinear'       #  x = (y-b)/a
        coeff: [48.2470, -2467.5654]
        negate: True            # multiply by -1 when calculating eps.

pt100:
    filename: 'sample_data/Campbell/CR6Series_SN4750_PT100_table.dat'
    channel: 0
    calibration:
        type: 'linear'
        coeff: [1.000320692, 0.]     # LVDT 2 (id 1)   cal factor: 1.00120175

hobo:
    datapath: 'sample_data/Hobo'
    file_extension: 'txt'
    separator: ';'
    deltatime: 0      # [seconds]
    config:
    - {channel: 0,
       label: 'Isolated Chamber',
       calibration: {type: 'linear', coeff: [1., -0.02]}}
    - {channel: 1,
       label: 'Frost chamber',
       calibration: {type: 'linear', coeff: [1., -0.02]}}
    - {channel: 2,
       label: 'Computer room',
       calibration: {type: 'linear', coeff: [1., 0.00]}}

history:
# 'history' is a list containing one entry (one line starting with '-') for each step in the experimet.
# Each entry in 'history' defines the start and end times of the step, and provides information on load
# application and environmental temperature.
#
# Explanation of parameters:
#
# step:     The step number, must be a unique integer
# load:     The applied load (in kPa), must be a floating point number
# temp:     The nominal temperature [degC] of the step. The actual temperature is calculated based on pt100 data.
# date:     A string representing the date the step was initiated (format: 'YYYY-MM-DD')
# date:     A string representing the date the step was initiated (format: 'YYYY-MM-DD')
# time1:    The start time of the time curve (time of load application) (format: 'hh:mm:ss', decimal seconds are allowed, e.g. '13:42:12.4')
# date2:    A string representing the date the step was completed (format: 'YYYY-MM-DD')
# time2:    The end time of the time curve (format: 'hh:mm:ss', decimal seconds are allowed, e.g. '13:42:12.4')
# comment:  A string comment, typically used to note iregularities in the process, cold-room malfunction etc.
#
# You do not have to specify all steps. The script will only process and plot the steps and time intervals specified.
# Entries/lines can be temporarily excluded by inserting the character '#' at the beginning of the line.
#
# A typical history entry could look like:
# - {step:  2, load:   22, temp: -10, date: 2019-01-17, time1: '09:20:25', date2: 2019-01-17, time2: '14:25:12', comment: 'Freezer break-down for 2h around 22:00'}
#
- {step:  0, load:   1.5, temp: -10, date: 2019-01-16, time1: '13:02:52', date2: 2019-01-16, time2: '15:23:09', comment: ''}
- {step:  1, load:    12, temp: -10, date: 2019-01-16, time1: '15:23:15', date2: 2019-01-17, time2: '09:10:45', comment: ''}
- {step:  2, load:    27, temp: -10, date: 2019-01-17, time1: '09:20:13', date2: 2019-01-17, time2: '14:25:12', comment: 'Freezer break-down for 2h around 22:00'}
- {step:  3, load:    53, temp: -10, date: 2019-01-17, time1: '14:27:34', date2: 2019-01-18, time2: '11:40:37', comment: ''}
- {step:  4, load:   129, temp: -10, date: 2019-01-18, time1: '11:43:27', date2: 2019-01-19, time2: '13:20:17', comment: ''}
- {step:  5, load:   308, temp: -10, date: 2019-01-19, time1: '13:22:36', date2: 2019-01-21, time2: '15:00:00', comment: 'Freezer break-down from 6 am until ... 21/01/2019'}
- {step:  6, load:   308, temp:   5, date: 2019-01-21, time1: '15:06:24', date2: 2019-01-22, time2: '12:22:03', comment: ''}
- {step:  8, load:   124, temp:   5, date: 2019-01-22, time1: '12:22:44', date2: 2019-01-23, time2: '10:45:59', comment: ''}
- {step:  9, load:    53, temp:   5, date: 2019-01-23, time1: '10:46:53', date2: 2019-01-23, time2: '14:00:18', comment: ''}
- {step:  10, load:   14, temp:   5, date: 2019-01-23, time1: '14:01:55', date2: 2019-01-23, time2: '16:24:26', comment: ''}
#- {step: 10, load:   24, temp:   5, date: 2019-01-27, time1: '16:26:00', date2: 2019-01-31, time2: '01:00:00', comment: ''}
- {step: 11, load:    24, temp:   5, date: 2019-01-23, time1: '16:26:23', date2: 2019-01-23, time2: '17:31:40', comment: ''}
- {step: 12, load:    53, temp:   5, date: 2019-01-23, time1: '17:32:48', date2: 2019-01-24, time2: '16:33:14', comment: ''}
- {step: 13, load:   124, temp:   5, date: 2019-01-24, time1: '16:33:54', date2: 2019-01-25, time2: '16:43:29', comment: ''}
- {step: 14, load:   308, temp:   5, date: 2019-01-25, time1: '16:44:52', date2: 2019-01-26, time2: '16:42:26', comment: ''}
- {step: 15, load:   614, temp:   5, date: 2019-01-26, time1: '16:43:05', date2: 2019-01-29, time2: '12:41:41', comment: ''}
- {step: 16, load:  1226, temp:   5, date: 2019-01-29, time1: '12:47:56', date2: 2019-01-30, time2: '13:23:04', comment: ''}
- {step: 17, load:  2451, temp:   5, date: 2019-01-30, time1: '13:23:48', date2: 2019-01-31, time2: '19:47:08', comment: ''}
- {step: 18, load:  1226, temp:   5, date: 2019-01-31, time1: '19:47:47', date2: 2019-02-01, time2: '12:45:56', comment: ''}
- {step: 19, load:   614, temp:   5, date: 2019-02-01, time1: '12:46:26', date2: 2019-02-01, time2: '14:58:46', comment: ''}
- {step: 20, load:   308, temp:   5, date: 2019-02-01, time1: '14:59:17', date2: 2019-02-03, time2: '12:52:31', comment: ''}
- {step: 21, load:   124, temp:   5, date: 2019-02-03, time1: '12:53:02', date2: 2019-02-03, time2: '15:00:04', comment: ''}
- {step: 22, load:    53, temp:   5, date: 2019-02-03, time1: '15:00:43', date2: 2019-02-03, time2: '16:56:06', comment: ''}
- {step: 23, load:    14, temp:   5, date: 2019-02-03, time1: '16:56:41', date2: 2019-02-04, time2: '15:13:07', comment: ''}
- {step: 24, load:     0, temp:   5, date: 2019-02-04, time1: '16:27:34', date2: 2019-02-04, time2: '17:15:00', comment: ''}



interpret:
# 'interpret' is a list containing one entry (one line starting with '-') for each step that is to be processed.
# Each entry in 'intepret' specifies the parameters needed to interpret the time curve of that particular step in the experiment.
#
# Explanation of parameters:
#
# step:     The step number, must be an integer and match the corresponding step in "history" section.
#           
# epsf:     (dict) Defines how to calculate the final strain value (epsf) of the timecurve.
#   dt:     time (in minutes) to average at the end of the time curve to calculate epsf.
#            
# temp:     (dict) Defines how to calculate the temperature of the time step
#   t0:     start time (in minutes) of the period to average
#   t1:     end time (in minutes) of the period to average. 
#                If t1 is set to -1, the script will average from t1 to end of time curve.
# timec:    (dict) Specifies parameters used for interpretation of the time curve primare consolidation and creep
#   t1, t2: start and end time (in minutes) of linear part (when plottet in sqrt(t)) of primary consolidation
#   t2, t3: start and end time (in minutes) of linear part (when plottet in log(t)) of creep phas
#   type:   Should be ’iso_sqrt’ to specify that the ISO Square Root Time method is used (ISO 17892-5 Sqrt-time method). 
#           The Brinch-Hansen is also available in the core library, but not yet implemented for use in the config file.
#   Intersect: Time (in minutes) where the x-axis in time curve plot should change from sqrt(t) to log(t)
#           This parameter is only used when t1, t2, t3 or t4 are not specified - and thus no interpretation is made.
#           When interpretation is succesful, intercept will be automatically set to the end of primary consolidation (t100)
#
# You do not have to specify all steps. The script will only process and plot the steps and time intervals specified.
# Entries/lines can be temporarily excluded by inserting the character '#' at the beginning of the line.
#
# A typical interpretation entry with with only basic interpretation of average temperature and final strain could look like:
# - {step:  1, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
#
# A typical interpretation entry with interpretation of primary consolidation and creep could look like:
# - {step: 23, epsf: {dt: 10}, temp: {t0: 0, t1: -1}, timec: {t1: 0.01, t2: 0.05, t3: 100, t4: 1000, type: 'iso_sqrt', intersect: 0.1 }}
#
- {step:  0, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  1, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  2, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  3, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  4, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  5, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  6, epsf: {dt: 10}, temp: {t0: 700, t1: -1}}
- {step:  7, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step:  9, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 10, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 11, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 12, epsf: {dt: 10}, temp: {t0: , t1: -1}}
- {step: 13, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 14, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 15, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 16, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
#- {step: 16, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 17, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 18, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 19, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 20, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 21, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 22, epsf: {dt: 10}, temp: {t0: 0, t1: -1}}
- {step: 23, epsf: {dt: 10}, temp: {t0: 0, t1: -1}, timec: {t1: 0.01, t2: 0.05, t3: 100, t4: 1000, type: 'iso_sqrt', intersect: 0.1 }}
- {step: 24, epsf: {dt: 10}, temp: {t0: 0, t1: -1}, timec: {t1: 0.01, t2: 0.05, t3: 100, t4: 1000, type: 'iso_sqrt', intersect: 0.1 }}


latex:
    produce_latex_file: True
    figspath: 'figs_QAA2017-22_S27'
    filename: 'tex/sample_QAA2017-22_S27.tex'
    interpretation_file: 'sample_data/interpretation.xlsx'
    
